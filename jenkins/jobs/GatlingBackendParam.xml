<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Running gatling simulation from file with parameters</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.compressbuildlog.BuildLogCompressor plugin="compress-buildlog@1.2"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@320.v5a_0933a_e7d61">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SIMULATION</name>
          <description>Select simulation to run</description>
          <defaultValue>eshop.ParameterizedScenario</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>USERS</name>
          <description>Set total number of users</description>
          <defaultValue>5</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RAMP_DURATION</name>
          <description>Set ramp up duration(sec)</description>
          <defaultValue>5</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_DURATION</name>
          <description>Set test max duration(sec)</description>
          <defaultValue>30</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>if docker container ls -a| grep gatling;
then
	docker container stop gatling
	docker container rm gatling
fi</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>docker run --name gatling --net=host --rm --volumes-from=jenkins -e SIMULATION=$SIMULATION -e WORKSPACE=$WORKSPACE -e JAVA_OPTS="-DUSERS=$USERS -DRAMP_DURATION=$RAMP_DURATION -DTEST_DURATION=$TEST_DURATION" eclipse-temurin:8-jdk
</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.postbuildtask.PostbuildTask plugin="postbuild-task@1.9">
      <tasks>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText>Build was aborted</logText>
              <operator>AND</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>false</EscalateStatus>
          <RunIfJobSuccessful>false</RunIfJobSuccessful>
          <script>docker container stop gatling</script>
        </hudson.plugins.postbuildtask.TaskProperties>
      </tasks>
    </hudson.plugins.postbuildtask.PostbuildTask>
    <io.gatling.jenkins.GatlingPublisher plugin="gatling@1.3.0">
      <enabled>true</enabled>
    </io.gatling.jenkins.GatlingPublisher>

    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.4">
    <script plugin="script-security@1.44">
      <script>
        import hudson.model.*
        //get current build
        def build = Thread.currentThread().executable
        def grafana_url = System.getenv(&quot;JENKINS_GRAFANA_URL&quot;)
        if(!grafana_url){
        println &apos;JENKINS_GRAFANA_URL is not specified&apos;
        grafana_url = &quot;127.0.0.1:8857&quot;
        }
        // grafana url for aggregate dashboard - replace time stamp with %s
        def perfResult = &quot;http://%s/dashboard/db/load-test-monitoring?from=%s&amp;to=%s&quot;
        // get build start and end time
        def start = build.getStartTimeInMillis();
        def end = start + build.getExecutor().getElapsedTime();
        // replace time
        perfResult = String.format(perfResult, grafana_url, start, end);
        //build the string to be added as description.
        def link = &quot;&lt;a href=&apos;%s&apos;&gt;%s&lt;/a&gt;&lt;br/&gt;&quot;;
        def sb = new StringBuilder();
        sb.append(String.format(link, perfResult, &quot;Grafana Performance Result&quot;))
        // set build description
        build.setDescription(sb.toString());
      </script>
      <sandbox>false</sandbox>
    </script>
    <behavior>1</behavior>
    <runForMatrixParent>false</runForMatrixParent>
  </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
  </publishers>
  <buildWrappers/>
</project>