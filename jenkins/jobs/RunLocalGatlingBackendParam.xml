<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Running gatling simulation from file with parameters.&#xd;
    &lt;br/&gt;To watch simulation stats in runtime follow the link after job start:&#xd;
    &lt;br/&gt;&lt;li&gt;&lt;a href=&apos;http://127.0.0.1:3000/d/gatling/gatling-report-metrics?from=now-5m&amp;refresh=5s&apos; target=&apos;_blank&apos;&gt;Runtime Grafana Report&lt;/a&gt;&lt;br/&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.compressbuildlog.BuildLogCompressor plugin="compress-buildlog@1.2"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SIMULATION</name>
          <description>Select simulation to run</description>
          <defaultValue>eshop.ParameterizedScenario</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>USERS</name>
          <description>Set total number of users</description>
          <defaultValue>5</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RAMP_DURATION</name>
          <description>Set ramp up duration(sec)</description>
          <defaultValue>5</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_DURATION</name>
          <description>Set test max duration(sec)</description>
          <defaultValue>30</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>if docker container ls -a --format &apos;{{.Names}}&apos; | grep -wq &apos;gatling&apos;
        then
        docker container stop gatling
        docker container rm gatling
        fi</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>docker run --name gatling --net=host --rm --volumes-from=jenkins -e JENKINS_LOGIN=$BUILD_USER_ID -e SIMULATION=$SIMULATION -e WORKSPACE=$WORKSPACE -e JAVA_OPTS=&quot;-DUSERS=$USERS -DRAMP_DURATION=$RAMP_DURATION -DTEST_DURATION=$TEST_DURATION -DBUILD_NUMBER=$BUILD_NUMBER&quot; eclipse-temurin:8-jdk
      </command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.5">
      <script plugin="script-security@1294.v99333c047434">
        <script>import hudson.model.*

          //get current build
          def build = Thread.currentThread().executable

          def grafana_url = System.getenv(&quot;JENKINS_GRAFANA_URL&quot;)

          if(!grafana_url){
          println &apos;JENKINS_GRAFANA_URL is not specified&apos;
          grafana_url = &quot;127.0.0.1:3000&quot;
          }

          // grafana url for aggregate dashboard - replace time stamp with %s
          def perfResult = &quot;http://%s/d/gatling/gatling-report-metrics?from=%s&amp;to=%s&quot;

          // get build start and end time
          def start = build.getStartTimeInMillis();
          def end = start + build.getExecutor().getElapsedTime();

          // replace time
          perfResult = String.format(perfResult, grafana_url, start, end);

          //build the string to be added as description.
          def link = &quot;&lt;li&gt;&lt;a href=&apos;%s&apos; target=&apos;_blank&apos;&gt;%s&lt;/a&gt;&lt;br/&gt;&quot;;
          def sb = new StringBuilder();
          sb.append(String.format(link, perfResult, &quot;Grafana Performance Result&quot;))

          // set build description
          build.setDescription(sb.toString());</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <hudson.plugins.postbuildtask.PostbuildTask plugin="postbuild-task@1.9">
      <tasks>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText>Build was aborted</logText>
              <operator>AND</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>false</EscalateStatus>
          <RunIfJobSuccessful>false</RunIfJobSuccessful>
          <script>docker container stop gatling</script>
        </hudson.plugins.postbuildtask.TaskProperties>
      </tasks>
    </hudson.plugins.postbuildtask.PostbuildTask>
    <io.gatling.jenkins.GatlingPublisher plugin="gatling@1.3.0">
      <enabled>true</enabled>
    </io.gatling.jenkins.GatlingPublisher>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.builduser.BuildUser plugin="build-user-vars-plugin@1.9"/>
  </buildWrappers>
</project>